# Deployment for the injector
{{ template "vault.mode" . }}
{{- if and (ne .mode "") (and ((eq (.Values.global.enabled | toString) "true") (eq (.Values.injector.enabled | toString) "true")))}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "vault.fullname" . }}-injector
  namespace: {{ .Release.Namespace }}
  labels:
    helm.sh/chart: {{ include "vault.chart" . }}
    app.kubernetes.io/name: {{ include "vault.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        helm.sh/chart: {{ template "vault.chart" . }}
        app.kubernetes.io/name: {{ template "vault.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: injector
    spec:
      serviceAccountName: "{{ template "vault.fullname" . }}-injector"
      containers:
        - name: sidecar-injector
          image: "{{ .Values.injector.image }}"
          imagePullPolicy: IfNotPresent
          args:
            - agent-inject
            - -tls-cert-file=/etc/webhook/certs/cert.pem
            - -tls-key-file=/etc/webhook/certs/key.pem
            - -vault-address={{ template "vault.fullname" . }}
            - 2>&1
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/webhook/certs
              readOnly: true
      volumes:
        - name: webhook-certs
          secret:
            secretName: "{{ .Values.injector.tls.secretName }}"
{{ end }}
